app:
  name: crmeb_go
  env: local
  key: '7kgDM7GoR0KngCJEwBIc3bk80v55bJgijXKlRj4wt1k='

server:
  http:
    addr: :8080
#  rpc:
#    addr: "9100"

log:
  level: debug # info error warn
  format: console # console 有颜色  json 无颜色
  prefix: "[test/dazhou]"
  director: log
  show-line: true
  encode-level: LowercaseColorLevelEncoder
  stacktrace-key: stacktrace
  log-in-console: true
  retention-day: -1


# system configuration
system:
  db-type: mysql
  oss-type: local # 控制oss选择走本地还是 七牛等其他仓 自行增加其他oss仓可以在 service/utils/iupload/iupload.go 中 NewOss函数配置
  use-redis: true # 使用redis
  use-mongo: false     # 使用mongo
  use-multipoint: false
  # IP限制次数 一个小时15000次
  iplimit-count: 15000
  #  IP限制一个小时
  iplimit-time: 3600
  #  路由全局前缀
  router-prefix: ""
  #  严格角色模式 打开后权限将会存在上下级关系
  use-strict-auth: false
  # 是否同步config表数据到redis
  async-config: true


mysql:
  path: 'localhost'   # 链接地址
  port: '3306'   # 链接端口
  config: 'parseTime=true&loc=Local'  # 其他配置 例如时区
  db-name: 'crmeb'  # 数据库名称
  username: 'root' # 数据库用户名
  password: 'dazhou520' # 数据库密码
  max-idle-conns: 10 # 连接池相关
  max-open-conns: 100 # 连接池相关
  log-mode: "error" # 是控制台打印日志级别 "silent"、"error"、"warn"、"info" 不填默认info  填入silent可以关闭控制台日志
  log-zap: true # 日志是否用zap保存到本地


cors:
  mode: allow-all # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id
      allow-methods: POST, GET
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type

      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值

redis:
  #是否使用redis集群模式
  useCluster: false
  #使用集群模式addr和db默认无效
  addr: 127.0.0.1:6379
  password: ""
  db: 0
#  clusterAddrs:
#    - "127.0.0.1:7000"
#    - "127.0.0.1:7001"
#    - "127.0.0.1:7002"

# redis_list configuration
redis_list:
  - name: cache           # 数据库的名称,注意: name 需要在 redis-list 中唯一
    useCluster: false     # 是否使用redis集群模式
    addr: 127.0.0.1:6379  # 使用集群模式addr和db默认无效
    password: ""
    db: 0
    clusterAddrs:
      - "127.0.0.1:7000"
      - "127.0.0.1:7001"
      - "127.0.0.1:7002"

# local configuration
local:
  path: uploads/file
  store-path: uploads/file

# autocode configuration
autocode:
  web: web/src
  root: "" # root 自动适配项目根目录, 请不要手动配置,他会在项目加载的时候识别出根路径
  server: server
  module: 'github.com/flipped-aurora/gin-vue-admin/server'
  ai-path: ""  # AI服务路径

# qiniu configuration (请自行七牛申请对应的 公钥 私钥 bucket 和 域名地址)
qiniu:
  zone: ZoneHuaDong
  bucket: ""
  img-path: ""
  use-https: false
  access-key: ""
  secret-key: ""
  use-cdn-domains: false

# minio oss configuration
minio:
  endpoint: yourEndpoint
  access-key-id: yourAccessKeyId
  access-key-secret: yourAccessKeySecret
  bucket-name: yourBucketName
  use-ssl: false
  base-path: ""
  bucket-url: "http://host:9000/yourBucketName"

# aliyun oss configuration
aliyun-oss:
  endpoint: yourEndpoint
  access-key-id: yourAccessKeyId
  access-key-secret: yourAccessKeySecret
  bucket-name: yourBucketName
  bucket-url: yourBucketUrl
  base-path: yourBasePath

# tencent cos configuration
tencent-cos:
  bucket: xxxxx-10005608
  region: ap-shanghai
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/flipped-aurora/gin-vue-admin/server

# aws s3 configuration (minio compatible)
aws-s3:
  bucket: xxxxx-10005608
  region: ap-shanghai
  endpoint: ""
  s3-force-path-style: false
  disable-ssl: false
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/flipped-aurora/gin-vue-admin/server

# cloudflare r2 configuration
cloudflare-r2:
  bucket: xxxx0bucket
  base-url: https://gin.vue.admin.com
  path: uploads
  account-id: xxx_account_id
  access-key-id: xxx_key_id
  secret-access-key: xxx_secret_key

# huawei obs configuration
hua-wei-obs:
  path: you-path
  bucket: you-bucket
  endpoint: you-endpoint
  access-key: you-access-key
  secret-key: you-secret-key