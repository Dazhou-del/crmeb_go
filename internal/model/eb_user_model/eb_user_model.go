// Code generated by gocli

package eb_user_model

import (
	"crmeb_go/internal/model"
	"gorm.io/gorm"
	"time"
)

// EbUserModel 用户表 模型
type EbUserModel struct {
	model.DBModel
	UID            uint64    `gorm:"column:uid;type:int unsigned;primaryKey;autoIncrement:true;comment:用户id" json:"uid"`                   // 用户id
	Account        string    `gorm:"column:account;type:varchar(32);not null;comment:用户账号" json:"account"`                                 // 用户账号
	Pwd            string    `gorm:"column:pwd;type:varchar(32);comment:用户密码" json:"pwd"`                                                  // 用户密码
	RealName       string    `gorm:"column:real_name;type:varchar(25);comment:真实姓名" json:"real_name"`                                      // 真实姓名
	Birthday       string    `gorm:"column:birthday;type:varchar(32);comment:生日" json:"birthday"`                                          // 生日
	CardID         string    `gorm:"column:card_id;type:varchar(20);comment:身份证号码" json:"card_id"`                                         // 身份证号码
	Mark           string    `gorm:"column:mark;type:varchar(255);comment:用户备注" json:"mark"`                                               // 用户备注
	PartnerID      uint64    `gorm:"column:partner_id;type:int;comment:合伙人id" json:"partner_id"`                                           // 合伙人id
	GroupID        string    `gorm:"column:group_id;type:varchar(255);comment:用户分组id" json:"group_id"`                                     // 用户分组id
	TagID          string    `gorm:"column:tag_id;type:varchar(255);comment:标签id" json:"tag_id"`                                           // 标签id
	Nickname       string    `gorm:"column:nickname;type:varchar(255);comment:用户昵称" json:"nickname"`                                       // 用户昵称
	Avatar         string    `gorm:"column:avatar;type:varchar(256);comment:用户头像" json:"avatar"`                                           // 用户头像
	Phone          string    `gorm:"column:phone;type:char(15);comment:手机号码" json:"phone"`                                                 // 手机号码
	AddIP          string    `gorm:"column:add_ip;type:varchar(16);comment:添加ip" json:"add_ip"`                                            // 添加ip
	LastIP         string    `gorm:"column:last_ip;type:varchar(16);comment:最后一次登录ip" json:"last_ip"`                                      // 最后一次登录ip
	NowMoney       float64   `gorm:"column:now_money;type:decimal(16,2) unsigned;default:0.00;comment:用户余额" json:"now_money"`              // 用户余额
	BrokeragePrice float64   `gorm:"column:brokerage_price;type:decimal(8,2);default:0.00;comment:佣金金额" json:"brokerage_price"`            // 佣金金额
	Integral       uint64    `gorm:"column:integral;type:int;comment:用户剩余积分" json:"integral"`                                              // 用户剩余积分
	Experience     uint64    `gorm:"column:experience;type:int unsigned;comment:用户剩余经验" json:"experience"`                                 // 用户剩余经验
	SignNum        uint64    `gorm:"column:sign_num;type:int;comment:连续签到天数" json:"sign_num"`                                              // 连续签到天数
	Status         uint64    `gorm:"column:status;type:tinyint(1);default:1;comment:1为正常，0为禁止" json:"status"`                              // 1为正常，0为禁止
	Level          uint64    `gorm:"column:level;type:tinyint unsigned;comment:等级" json:"level"`                                           // 等级
	SpreadUID      uint64    `gorm:"column:spread_uid;type:int unsigned;comment:推广员id" json:"spread_uid"`                                  // 推广员id
	SpreadTime     time.Time `gorm:"column:spread_time;type:timestamp;comment:推广员关联时间" json:"spread_time"`                                 // 推广员关联时间
	UserType       string    `gorm:"column:user_type;type:varchar(32);not null;comment:用户类型" json:"user_type"`                             // 用户类型
	IsPromoter     uint64    `gorm:"column:is_promoter;type:tinyint unsigned;comment:是否为推广员" json:"is_promoter"`                           // 是否为推广员
	PayCount       uint64    `gorm:"column:pay_count;type:int unsigned;comment:用户购买次数" json:"pay_count"`                                   // 用户购买次数
	SpreadCount    uint64    `gorm:"column:spread_count;type:int;comment:下级人数" json:"spread_count"`                                        // 下级人数
	Addres         string    `gorm:"column:addres;type:varchar(255);comment:详细地址" json:"addres"`                                           // 详细地址
	Adminid        uint64    `gorm:"column:adminid;type:int unsigned;comment:管理员编号" json:"adminid"`                                        // 管理员编号
	LoginType      string    `gorm:"column:login_type;type:varchar(36);not null;comment:用户登陆类型，h5,wechat,routine" json:"login_type"`       // 用户登陆类型，h5,wechat,routine
	CreateTime     time.Time `gorm:"column:create_time;type:timestamp;not null;default:CURRENT_TIMESTAMP;comment:创建时间" json:"create_time"` // 创建时间
	UpdateTime     time.Time `gorm:"column:update_time;type:timestamp;not null;default:CURRENT_TIMESTAMP;comment:更新时间" json:"update_time"` // 更新时间
	LastLoginTime  time.Time `gorm:"column:last_login_time;type:timestamp;comment:最后一次登录时间" json:"last_login_time"`                        // 最后一次登录时间
	CleanTime      time.Time `gorm:"column:clean_time;type:timestamp;comment:清除时间" json:"clean_time"`                                      // 清除时间
	Path           string    `gorm:"column:path;type:varchar(255);not null;default:/0/;comment:推广等级记录" json:"path"`                        // 推广等级记录
	Subscribe      uint64    `gorm:"column:subscribe;type:tinyint;comment:是否关注公众号" json:"subscribe"`                                       // 是否关注公众号
	SubscribeTime  time.Time `gorm:"column:subscribe_time;type:timestamp;comment:关注公众号时间" json:"subscribe_time"`                           // 关注公众号时间
	Sex            uint64    `gorm:"column:sex;type:tinyint(1);default:1;comment:性别，0未知，1男，2女，3保密" json:"sex"`                             // 性别，0未知，1男，2女，3保密
	Country        string    `gorm:"column:country;type:varchar(20);default:CN;comment:国家，中国CN，其他OTHER" json:"country"`                    // 国家，中国CN，其他OTHER
	PromoterTime   time.Time `gorm:"column:promoter_time;type:timestamp;comment:成为分销员时间" json:"promoter_time"`                             // 成为分销员时间
}

// EbUserModel 新用户表 模型实例
func NewEbUserModel(db *gorm.DB) *EbUserModel {
	return &EbUserModel{DBModel: *model.NewDBModel(db, "crmeb", "eb_user")}
}
